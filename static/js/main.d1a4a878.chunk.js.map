{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","code","events","error","testing","componentDidMount","testEndPoints","goToRoot","window","location","href","origin","a","queryString","search","urlParams","URLSearchParams","get","fetch","result","json","resultJson","authUrl","console","log","decodeURIComponent","encodeURIComponent","access_token","calendarCall","calendarCallJSON","errors","this","setState","Array","isArray","message","className","onClick","map","item","i","summary","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","Error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA2FeA,E,4MAvFbC,MAAQ,CAAEC,KAAM,GAAIC,OAAQ,GAAIC,MAAO,GAAIC,SAAS,G,EACpDC,kBAAoB,WACb,EAAKL,MAAMI,SAAS,EAAKE,iB,EAoDhCC,SAAW,WACTC,OAAOC,SAASC,KAAhB,UAA0BF,OAAOC,SAASE,OAA1C,W,0FAlDF,gDAAAC,EAAA,yDACQC,EAAcL,OAAOC,SAASK,OAE9BC,EAAY,IAAIC,gBAAgBH,GAElCZ,EAAOc,EAAUE,IAAI,QAL3B,iCAQuBC,MACjB,+EATN,cAQQC,EARR,gBAW2BA,EAAOC,OAXlC,OAWQC,EAXR,OAYUC,EAAYD,EAAZC,QACNC,QAAQC,IAAIF,GACZd,OAAOC,SAASC,KAAOY,EAd3B,+BAgBQG,mBAAmBxB,KAAUA,IAC/BA,EAAOyB,mBAAmBzB,IAE5BsB,QAAQC,IAAI,YAAavB,GAnB7B,UAoBuBiB,MAAM,wEAAD,OACkDjB,IArB9E,eAoBQkB,EApBR,iBAuB2BA,EAAOC,OAvBlC,eAuBQC,EAvBR,OAyBIE,QAAQC,IAAI,wBAAyBH,GAE7BM,EAAiBN,EAAjBM,aA3BZ,UA4B6BT,MAAM,6EAAD,OACiDS,IA7BnF,eA4BQC,EA5BR,iBA+BiCA,EAAaR,OA/B9C,QA+BQS,EA/BR,OAiCIN,QAAQC,IAAI,WAAYI,GACxBL,QAAQC,IAAI,SAAUK,EAAiBC,QAEnCD,EAAiBC,OACnBC,KAAKC,SAAS,CACZ7B,MAAO8B,MAAMC,QAAQL,EAAiBC,QAClCD,EAAiBC,OAAO,GAAGK,QAC3BN,EAAiBC,OAAOK,UAI9BJ,KAAKC,SAAS,CAAE9B,OAAQ2B,EAAiB3B,SA5C/C,iD,0EAqDA,WACE,MAAmC6B,KAAK/B,MAAhCE,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MAEhB,OAFA,EAAuBC,QAEH,wCAEhBD,EAEA,qBAAKiC,UAAU,MAAf,SACE,yCAAYjC,OAMhB,sBAAKiC,UAAU,MAAf,UACE,6CACA,wBAAQC,QAASN,KAAKxB,SAAtB,qBACA,uBACA,6BACGL,EAAOoC,KAAI,SAACC,EAAMC,GACjB,OAAO,6BAAaD,EAAKE,SAATD,QAGpB,8B,GAlFUE,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,SAAc,oCAAoCC,UAClDD,SAAc,IAAIE,MAAM,sBACxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.d1a4a878.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = { code: \"\", events: [], error: \"\", testing: true };\n  componentDidMount = () => {\n    if (!this.state.testing) this.testEndPoints();\n  };\n\n  async testEndPoints() {\n    const queryString = window.location.search;\n\n    const urlParams = new URLSearchParams(queryString);\n\n    let code = urlParams.get(\"code\");\n\n    if (!code) {\n      let result = await fetch(\n        \"https://m200p3c8ne.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      let resultJson = await result.json();\n      let { authUrl } = resultJson;\n      console.log(authUrl);\n      window.location.href = authUrl;\n    } else {\n      if (decodeURIComponent(code) === code) {\n        code = encodeURIComponent(code);\n      }\n      console.log(\"get code \", code);\n      let result = await fetch(\n        `https://m200p3c8ne.execute-api.us-east-1.amazonaws.com/dev/api/token/${code}`\n      );\n      let resultJson = await result.json();\n\n      console.log(\"get token call result\", resultJson);\n\n      const { access_token } = resultJson;\n      let calendarCall = await fetch(\n        `https://m200p3c8ne.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${access_token}`\n      );\n      let calendarCallJSON = await calendarCall.json();\n\n      console.log(\"calendar\", calendarCall);\n      console.log(\"errors\", calendarCallJSON.errors);\n\n      if (calendarCallJSON.errors) {\n        this.setState({\n          error: Array.isArray(calendarCallJSON.errors)\n            ? calendarCallJSON.errors[0].message\n            : calendarCallJSON.errors.message,\n        });\n        // this.goToRoot();\n      } else {\n        this.setState({ events: calendarCallJSON.events });\n      }\n    }\n  }\n\n  goToRoot = () => {\n    window.location.href = `${window.location.origin}/meet/`;\n  };\n\n  render() {\n    const { events, error, testing } = this.state;\n\n    if (testing) return <h1>hello.</h1>;\n\n    if (error) {\n      return (\n        <div className=\"App\">\n          <h1>error: {error}</h1>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>event list:</h1>\n        <button onClick={this.goToRoot}>refresh</button>\n        <hr />\n        <ul>\n          {events.map((item, i) => {\n            return <li key={i}>{item.summary}</li>;\n          })}\n        </ul>\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\natatus.config('8963213e3b144ddc8bb6ead44aae4ba3').install();\natatus.notify(new Error('Test Atatus Setup'));\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}