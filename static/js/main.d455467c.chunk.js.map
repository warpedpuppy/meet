{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","code","events","error","componentDidMount","goToRoot","window","location","href","origin","a","queryString","search","urlParams","URLSearchParams","get","fetch","result","json","resultJson","authUrl","console","log","decodeURIComponent","encodeURIComponent","access_token","calendarCall","calendarCallJSON","errors","this","setState","Array","isArray","message","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA6FeA,E,4MAzFbC,MAAQ,CAACC,KAAM,GAAIC,OAAQ,GAAIC,MAAO,I,EACtCC,kBAAoB,a,EAkDpBC,SAAW,WACTC,OAAOC,SAASC,KAAhB,UAA0BF,OAAOC,SAASE,OAA1C,W,0FA9CF,gDAAAC,EAAA,yDAEQC,EAAcL,OAAOC,SAASK,OAE9BC,EAAY,IAAIC,gBAAgBH,GAElCV,EAAOY,EAAUE,IAAI,QAN3B,iCAUuBC,MAAM,+EAV7B,cAUQC,EAVR,gBAW2BA,EAAOC,OAXlC,OAWQC,EAXR,OAYUC,EAAYD,EAAZC,QACTC,QAAQC,IAAIF,GAbb,+BAkBQG,mBAAmBtB,KAAUA,IAC7BA,EAAOuB,mBAAmBvB,IAEjCoB,QAAQC,IAAI,YAAarB,GArB1B,UAsBuBe,MAAM,wEAAD,OAAyEf,IAtBrG,eAsBQgB,EAtBR,iBAuB2BA,EAAOC,OAvBlC,eAuBQC,EAvBR,OAyBCE,QAAQC,IAAI,wBAAyBH,GAG1BM,EAAiBN,EAAjBM,aA5BZ,UA6B6BT,MAAM,6EAAD,OAA8ES,IA7BhH,eA6BQC,EA7BR,iBA8BiCA,EAAaR,OA9B9C,QA8BQS,EA9BR,OAgCCN,QAAQC,IAAI,WAAYI,GACxBL,QAAQC,IAAI,SAAUK,EAAiBC,QAGhCD,EAAiBC,OACzBC,KAAKC,SAAS,CAAC3B,MAAO4B,MAAMC,QAAQL,EAAiBC,QAAUD,EAAiBC,OAAO,GAAGK,QAAUN,EAAiBC,OAAOK,UAGtHJ,KAAKC,SAAS,CAAC5B,OAAQyB,EAAiBzB,SAxC9C,iD,0EAmDA,WAGD,OAAO,iD,GA7DUgC,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d455467c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {code: '', events: [], error: ''}\n  componentDidMount = () => {\n\n    // this.testEndPoints();\n  }\n\n  async testEndPoints () {\n\n    const queryString = window.location.search;\n    \n    const urlParams = new URLSearchParams(queryString);\n\n    let code = urlParams.get(\"code\");\n\n    if (!code) {\n\n      let result = await fetch('https://m200p3c8ne.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url');\n      let resultJson = await result.json();\n      let { authUrl } = resultJson;\n\t  console.log(authUrl)\n    //   window.location.href = authUrl;\n\n    } else {\n\t\t\n      if (decodeURIComponent(code) === code) {\n          code = encodeURIComponent(code);\n      }\n\t  console.log('get code ', code);\n      let result = await fetch(`https://m200p3c8ne.execute-api.us-east-1.amazonaws.com/dev/api/token/${code}`)\n      let resultJson = await result.json();\n\n\t  console.log('get token call result', resultJson);\n\n\n      const { access_token } = resultJson;\n      let calendarCall = await fetch(`https://m200p3c8ne.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${access_token}`);\n      let calendarCallJSON = await calendarCall.json();\n\n\t  console.log(\"calendar\", calendarCall)\n\t  console.log(\"errors\", calendarCallJSON.errors)\n\n\n      if (calendarCallJSON.errors) {\n\t\tthis.setState({error: Array.isArray(calendarCallJSON.errors) ? calendarCallJSON.errors[0].message : calendarCallJSON.errors.message })\n        // this.goToRoot();\n      } else {\n        this.setState({events: calendarCallJSON.events})\n      }\n    }\n  }\n\n  goToRoot = () => {\n    window.location.href = `${window.location.origin}/meet/`;\n  }\n\n  \n\n  render () {\n    // const { events, error } = this.state;\n\n\treturn <h1>hello world</h1>; \n// \tif (error) {\n// \t\treturn (\n// \t\t\t<div className=\"App\">\n// \t\t\t\t<h1>error: { error }</h1>\n// \t\t\t</div>\n// \t\t)\n// \t}\n\n//      return (\n//       <div className=\"App\">\n// \t\t<h1>event list:</h1>\n//         <button onClick={this.goToRoot}>refresh</button>\n//         <hr />\n//         <ul>\n//           {\n//             events.map( (item, i) => {\n//               return <li key={i}>{item.summary}</li>\n//             })\n//           }\n//         </ul>\n//         <hr />\n//       </div>\n//     );\n//   }\n  }\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}