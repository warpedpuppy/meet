{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","code","events","componentDidMount","testEndPoints","goToRoot","window","location","href","origin","a","urlParams","URLSearchParams","search","get","this","stepOne","stepTwo","access_token","stepThree","console","log","fetch","result","json","resultJson","authUrl","setState","decodeURIComponent","encodeURIComponent","calendarCall","calendarCallJSON","className","onClick","map","item","i","summary","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAmFeA,E,4MA/EbC,MAAQ,CAACC,KAAM,GAAIC,OAAQ,I,EAC3BC,kBAAoB,WAElB,EAAKC,iB,EAoDPC,SAAW,WACTC,OAAOC,SAASC,KAAOF,OAAOC,SAASE,Q,0FAlDzC,gCAAAC,EAAA,yDAEQC,EAAY,IAAIC,gBAAgBN,OAAOC,SAASM,QAClDZ,EAAOU,EAAUG,IAAI,QAH3B,gBAKIC,KAAKC,QAAQf,GALjB,uCAO6Bc,KAAKE,UAPlC,OAOQC,EAPR,OAQIH,KAAKI,UAAUD,GARnB,iD,kHAaA,kCAAAR,EAAA,6DACEU,QAAQC,IAAI,YADd,SAEuBC,MAAM,+EAF7B,cAEQC,EAFR,gBAG2BA,EAAOC,OAHlC,OAGQC,EAHR,OAIUC,EAAYD,EAAZC,QAEAf,EAAY,IAAIC,gBAAgBc,GAEtCX,KAAKY,SAAS,CAAC1B,KAAMU,EAAUG,IAAI,UACnCR,OAAOC,SAASC,KAAOkB,EAT3B,iD,kHAYA,WAAezB,GAAf,mBAAAS,EAAA,6DACEU,QAAQC,IAAI,WAAYpB,GAEpB2B,mBAAmB3B,KAAUA,IAC7BA,EAAO4B,mBAAmB5B,IAE9BmB,QAAQC,IAAI,eAAgBpB,GAN9B,SAQqBqB,MAAM,wEAAD,OAAyErB,IARnG,cAQMsB,EARN,gBASyBA,EAAOC,OAThC,cASMC,EATN,OAUEL,QAAQC,IAAI,kBAAmBI,GAEvBP,EAAiBO,EAAjBP,aAZV,kBAaSA,GAbT,4C,qHAiBA,WAAiBA,GAAjB,iBAAAR,EAAA,sEAC2BY,MAAM,6EAAD,OAA8EJ,IAD9G,cACMY,EADN,gBAE+BA,EAAaN,OAF5C,OAEMO,EAFN,OAGEX,QAAQC,IAAI,mBAAoBU,GAChChB,KAAKY,SAAS,CAACzB,OAAQ6B,IAJzB,gD,2EAUA,WACE,IAAQ7B,EAAWa,KAAKf,MAAhBE,OACP,OACC,sBAAK8B,UAAU,MAAf,UACE,wBAAQC,QAASlB,KAAKV,SAAtB,qBACA,uBACA,6BAAKU,KAAKf,MAAMC,OAChB,6BAEIC,EAAOgC,KAAK,SAACC,EAAMC,GACjB,OAAO,6BAAaD,EAAKE,SAATD,QAItB,8B,GAzEUE,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c310c6b4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {code: '', events: []}\n  componentDidMount = () => {\n\n    this.testEndPoints();\n  }\n\n  async testEndPoints () {\n\n    const urlParams = new URLSearchParams(window.location.search);\n    let code = urlParams.get(\"code\");\n    if (!code) {\n      this.stepOne(code);\n    } else {\n      let access_token = await this.stepTwo();\n      this.stepThree(access_token)\n    }\n\n  }\n\n  async stepOne () {\n    console.log(\"step one\")\n      let result = await fetch('https://m200p3c8ne.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url');\n      let resultJson = await result.json();\n      let { authUrl } = resultJson;\n\n      const urlParams = new URLSearchParams(authUrl);\n      \n      this.setState({code: urlParams.get(\"code\")})\n      window.location.href = authUrl;\n  }\n\n  async stepTwo (code) {\n    console.log(\"step two\", code)\n\n    if (decodeURIComponent(code) === code) {\n        code = encodeURIComponent(code);\n    }\n    console.log(\"encoded code\", code)\n\n    let result = await fetch(`https://m200p3c8ne.execute-api.us-east-1.amazonaws.com/dev/api/token/${code}`)\n    let resultJson = await result.json();\n    console.log(\"from token code\", resultJson)\n\n    const { access_token } = resultJson\n    return access_token;\n\n  }\n\n  async stepThree (access_token) {\n    let calendarCall = await fetch(`https://m200p3c8ne.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${access_token}`);\n    let calendarCallJSON = await calendarCall.json();\n    console.log(\"final product = \", calendarCallJSON)\n    this.setState({events: calendarCallJSON})\n  }\n\n  goToRoot = () => {\n    window.location.href = window.location.origin;\n  }\n  render () {\n    const { events } = this.state;\n     return (\n      <div className=\"App\">\n        <button onClick={this.goToRoot}>refresh</button>\n        <hr />\n        <h1>{this.state.code}</h1>\n        <ul>\n          {\n            events.map( (item, i) => {\n              return <li key={i}>{item.summary}</li>\n            })\n          }\n        </ul>\n        <hr />\n      </div>\n    );\n  }\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}