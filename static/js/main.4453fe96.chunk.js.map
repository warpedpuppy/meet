{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","code","events","componentDidMount","testEndPoints","goToRoot","window","location","href","origin","a","queryString","search","urlParams","URLSearchParams","get","console","log","fetch","result","json","resultJson","authUrl","this","setState","decodeURIComponent","encodeURIComponent","access_token","calendarCall","calendarCallJSON","errors","length","className","onClick","map","item","i","summary","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAuFeA,E,4MAnFbC,MAAQ,CAACC,KAAM,GAAIC,OAAQ,I,EAC3BC,kBAAoB,WAOlB,EAAKC,iB,EAmDPC,SAAW,WACTC,OAAOC,SAASC,KAAhB,UAA0BF,OAAOC,SAASE,OAA1C,W,0FAjDF,kDAAAC,EAAA,yDAEQC,EAAcL,OAAOC,SAASK,OAE9BC,EAAY,IAAIC,gBAAgBH,GAElCV,EAAOY,EAAUE,IAAI,QAN3B,wBASIC,QAAQC,IAAI,YAThB,SAUuBC,MAAM,+EAV7B,cAUQC,EAVR,iBAW2BA,EAAOC,OAXlC,QAWQC,EAXR,OAYUC,EAAYD,EAAZC,QAEAT,EAAY,IAAIC,gBAAgBQ,GAEtCC,KAAKC,SAAS,CAACvB,KAAMY,EAAUE,IAAI,UACnCT,OAAOC,SAASC,KAAOc,EAjB3B,+BAoBIN,QAAQC,IAAI,WAAYhB,GAEpBwB,mBAAmBxB,KAAUA,IAC7BA,EAAOyB,mBAAmBzB,IAE9Be,QAAQC,IAAI,eAAgBhB,GAzBhC,UA2BuBiB,MAAM,wEAAD,OAAyEjB,IA3BrG,eA2BQkB,EA3BR,iBA4B2BA,EAAOC,OA5BlC,eA4BQC,EA5BR,OA6BIL,QAAQC,IAAI,kBAAmBI,GAEvBM,EAAiBN,EAAjBM,aA/BZ,UAkC6BT,MAAM,6EAAD,OAA8ES,IAlChH,eAkCQC,EAlCR,iBAmCiCA,EAAaR,OAnC9C,QAmCQS,EAnCR,OAoCIb,QAAQC,IAAI,mBAAoBY,GAE5BA,EAAiBC,OAAOC,OAC1BR,KAAKlB,WAELkB,KAAKC,SAAS,CAACtB,OAAQ2B,EAAiB3B,SAzC9C,iD,0EAmDA,WACE,IAAQA,EAAWqB,KAAKvB,MAAhBE,OACP,OACC,sBAAK8B,UAAU,MAAf,UACE,wBAAQC,QAASV,KAAKlB,SAAtB,qBACA,uBACA,6BAAKkB,KAAKvB,MAAMC,OAChB,6BAEIC,EAAOgC,KAAK,SAACC,EAAMC,GACjB,OAAO,6BAAaD,EAAKE,SAATD,QAItB,8B,GA7EUE,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4453fe96.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {code: '', events: []}\n  componentDidMount = () => {\n    // const queryString = window.location.search;\n    // console.log(queryString);\n    // const urlParams = new URLSearchParams(queryString);\n    // console.log(urlParams, urlParams.get(\"code\"))\n    // this.setState({code: urlParams.get(\"code\")})\n\n    this.testEndPoints();\n  }\n\n  async testEndPoints () {\n\n    const queryString = window.location.search;\n    \n    const urlParams = new URLSearchParams(queryString);\n\n    let code = urlParams.get(\"code\");\n\n    if (!code) {\n      console.log(\"step one\")\n      let result = await fetch('https://m200p3c8ne.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url');\n      let resultJson = await result.json();\n      let { authUrl } = resultJson;\n\n      const urlParams = new URLSearchParams(authUrl);\n      \n      this.setState({code: urlParams.get(\"code\")})\n      window.location.href = authUrl;\n\n    } else {\n      console.log(\"step two\", code)\n\n      if (decodeURIComponent(code) === code) {\n          code = encodeURIComponent(code);\n      }\n      console.log(\"encoded code\", code)\n\n      let result = await fetch(`https://m200p3c8ne.execute-api.us-east-1.amazonaws.com/dev/api/token/${code}`)\n      let resultJson = await result.json();\n      console.log(\"from token code\", resultJson)\n\n      const { access_token } = resultJson\n      //\n\n      let calendarCall = await fetch(`https://m200p3c8ne.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${access_token}`);\n      let calendarCallJSON = await calendarCall.json();\n      console.log(\"final product = \", calendarCallJSON)\n\n      if (calendarCallJSON.errors.length) {\n        this.goToRoot();\n      } else {\n        this.setState({events: calendarCallJSON.events})\n      }\n      \n\n    }\n\n  }\n  goToRoot = () => {\n    window.location.href = `${window.location.origin}/meet/`;\n  }\n  render () {\n    const { events } = this.state;\n     return (\n      <div className=\"App\">\n        <button onClick={this.goToRoot}>refresh</button>\n        <hr />\n        <h1>{this.state.code}</h1>\n        <ul>\n          {\n            events.map( (item, i) => {\n              return <li key={i}>{item.summary}</li>\n            })\n          }\n        </ul>\n        <hr />\n      </div>\n    );\n  }\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}